#include <bits/stdc++.h> 
/************************************************************

    Following is the TreeNode class structure

    template <typename T>
    class TreeNode {
       public:
        T data;
        TreeNode<T> *left;
        TreeNode<T> *right;

        TreeNode(T data) {
            this->data = data;
            left = NULL;
            right = NULL;
        }
    };

************************************************************/
int findindex(int n,vector<int>&inorder){
    for(int i=0;i<inorder.size();i++){
        if(inorder[i]==n) return i;

    } return -1;
}
TreeNode<int> *buildBinaryTree(vector<int> &inorder, vector<int> &preorder)
{
	//    Write your code here
    if(preorder.size()==0) return nullptr;
    int idx=findindex(preorder[0],inorder);
    TreeNode<int>* root=new TreeNode<int>(preorder[0]);
    vector<int>inorder_left(inorder.begin(),inorder.begin()+idx);
    vector<int>preorder_left(preorder.begin()+1,preorder.begin()+idx+1);
    vector<int>inorder_right(inorder.begin()+idx+1,inorder.end());
    vector<int>preorder_right(preorder.begin()+idx+1,preorder.end());
    root->left=buildBinaryTree(inorder_left,preorder_left);
    root->right=buildBinaryTree(inorder_right,preorder_right);
    return root;
}
