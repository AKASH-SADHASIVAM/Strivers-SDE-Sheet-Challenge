#include <bits/stdc++.h> 
/*************************************************************

    Following is the Binary Tree node structure

    class BinaryTreeNode
    {
    public :
        T data;
        BinaryTreeNode<T> *left;
        BinaryTreeNode<T> *right;

        BinaryTreeNode(T data) {
            this -> data = data;
            left = NULL;
            right = NULL;
        }
    };

*************************************************************/

vector<int> zigZagTraversal(BinaryTreeNode<int> *root)
{
    // Write your code here!
    vector<int>v;
    if(root==nullptr) return v;
    queue<BinaryTreeNode<int>*>q;
    q.push(root);
    int flag=0;
    while(!q.empty()){
        int n=q.size();
        vector<int>temp;
        for(int i=0;i<n;i++){
            BinaryTreeNode<int>*  curr=q.front();
            q.pop();
            temp.push_back(curr->data);
            if(curr->left) q.push(curr->left);
            if(curr->right) q.push(curr->right);
        }
        if(flag) reverse(temp.begin(),temp.end());
        flag=!flag;
        v.insert(v.end(),temp.begin(),temp.end());
    }
    return v;
}
