int binarysearch(vector<int>&v,int mid){
    int low=0;
    int high=v.size()-1;
    while(low<=high){
        int m=(low+high)/2;
        if(v[m]<=mid){
            low=m+1;
        }
        else high=m-1;
    }
    return low;
}



int getMedian(vector<vector<int>> &matrix)
{
    // Write your code here.
    int m=matrix[0].size();
    int n=matrix.size();
    int low=1;
    int high=1e9;
    while(low<=high){
        int count=0;
        int mid=(low+high)/2;
        for(int i=0;i<n;i++){
            count=count+binarysearch(matrix[i],mid);
        }
        if(count<=(n*m)/2){
            low=mid+1;
        }
        else high=mid-1;
    }
    return low;
}
