void dfs(int idx,vector<int>&visited,vector<int>&v,
map<int,vector<int>>&adjLst){
    visited[idx]=1;
    v.push_back(idx);
    for(auto x:adjLst[idx]){
        if(!visited[x]){
            dfs(x,visited,v,adjLst);
        }
    }

}

vector<vector<int>> depthFirstSearch(int V, int E, vector<vector<int>> &edges)
{
    // Write your code here

    map<int,vector<int>>adjLst;
    vector<vector<int>>res;
    for(int i=0;i<edges.size();i++){
        adjLst[edges[i][0]].push_back(edges[i][1]);
        adjLst[edges[i][1]].push_back(edges[i][0]);
    }
    vector<int>visited(V,0);
    for(int i=0;i<V;i++){
        
        if(!visited[i]){
            vector<int>v;
            dfs(i,visited,v,adjLst);
            res.push_back(v);
        }
        //res.push_back(v);
    }
    return res;
}
